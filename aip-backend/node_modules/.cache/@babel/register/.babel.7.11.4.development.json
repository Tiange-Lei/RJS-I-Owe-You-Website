{
  "{\"sourceRoot\":\"/Users/encore/AIP_Assessment2/aip-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/encore/AIP_Assessment2/aip-backend\",\"filename\":\"/Users/encore/AIP_Assessment2/aip-backend/src/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/encore/AIP_Assessment2/aip-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/encore/AIP_Assessment2/aip-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/encore/AIP_Assessment2/aip-backend",
      "filename": "/Users/encore/AIP_Assessment2/aip-backend/src/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/encore/AIP_Assessment2/aip-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/encore/AIP_Assessment2/aip-backend/src/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/encore/AIP_Assessment2/aip-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/encore/AIP_Assessment2/aip-backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _uuid = require(\"uuid\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\nvar today = Date.now();\nvar favours = [{\n  id: (0, _uuid.v1)(),\n  publisher: '',\n  award: '',\n  text: 'Help with the window',\n  createdAt: today,\n  isAccepted: false\n}];\n\nvar allowCrossDomain = function allowCrossDomain(req, res, next) {\n  res.header('Access-Control-Allow-Origin', \"*\");\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n  res.header('Access-Control-Allow-Headers', 'Content-Type');\n  next();\n};\n\napp.use(allowCrossDomain);\napp.get('/favours', function (req, res) {\n  res.status(200).json(favours);\n});\napp.post('/favours', function (req, res) {\n  var favour = req.body.favour;\n  var newFavour = {\n    id: (0, _uuid.v1)(),\n    text: favour.text,\n    award: favour.award,\n    createdAt: new Date(),\n    isAccepted: false\n  };\n  favours.push(newFavour);\n  res.status(200).json(newFavour);\n});\napp.post('/favours/:id/accepted', function (req, res) {\n  var id = req.params.id;\n  console.log(\"POST /favours/\".concat(id, \"/accepted\"));\n  var favourIndex = favours.findIndex(function (favour) {\n    return favour.id === id;\n  });\n  favours[favourIndex].isAccepted = true, res.status(200).json(favours[favourIndex]);\n});\napp[\"delete\"]('/favours/:id', function (req, res) {\n  var id = req.params.id;\n  console.log(\"DELETE /favours/\".concat(id));\n  var favourIndex = favours.findIndex(function (favour) {\n    return favour.id === id;\n  });\n  var deletedFavour = favours.splice(favourIndex, 1);\n  res.status(200).json(deletedFavour[0]);\n});\napp.listen(8000, function () {\n  return console.log(\"Listening on port:8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInRvZGF5IiwiRGF0ZSIsIm5vdyIsImZhdm91cnMiLCJpZCIsInB1Ymxpc2hlciIsImF3YXJkIiwidGV4dCIsImNyZWF0ZWRBdCIsImlzQWNjZXB0ZWQiLCJhbGxvd0Nyb3NzRG9tYWluIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlciIsImdldCIsInN0YXR1cyIsInBvc3QiLCJmYXZvdXIiLCJib2R5IiwibmV3RmF2b3VyIiwicHVzaCIsInBhcmFtcyIsImNvbnNvbGUiLCJsb2ciLCJmYXZvdXJJbmRleCIsImZpbmRJbmRleCIsImRlbGV0ZWRGYXZvdXIiLCJzcGxpY2UiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUMsMEJBQVY7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFFQSxJQUFNQyxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxFQUFkO0FBRUEsSUFBSUMsT0FBTyxHQUFHLENBQ1Y7QUFDRUMsRUFBQUEsRUFBRSxFQUFFLGVBRE47QUFFRUMsRUFBQUEsU0FBUyxFQUFDLEVBRlo7QUFHRUMsRUFBQUEsS0FBSyxFQUFDLEVBSFI7QUFJRUMsRUFBQUEsSUFBSSxFQUFFLHNCQUpSO0FBS0VDLEVBQUFBLFNBQVMsRUFBRVIsS0FMYjtBQU1FUyxFQUFBQSxVQUFVLEVBQUU7QUFOZCxDQURVLENBQWQ7O0FBY0EsSUFBSUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQzVDRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxxQkFBM0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsOEJBQVgsRUFBMkMsY0FBM0M7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBTEg7O0FBT0VqQixHQUFHLENBQUNDLEdBQUosQ0FBUWEsZ0JBQVI7QUFHQWQsR0FBRyxDQUFDbUIsR0FBSixDQUFRLFVBQVIsRUFBb0IsVUFBQ0osR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaENBLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JqQixJQUFoQixDQUFxQkksT0FBckI7QUFDRCxDQUZEO0FBS0FQLEdBQUcsQ0FBQ3FCLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsTUFDekJNLE1BRHlCLEdBQ2RQLEdBQUcsQ0FBQ1EsSUFEVSxDQUN6QkQsTUFEeUI7QUFFakMsTUFBTUUsU0FBUyxHQUFHO0FBQ2hCaEIsSUFBQUEsRUFBRSxFQUFFLGVBRFk7QUFFaEJHLElBQUFBLElBQUksRUFBRVcsTUFBTSxDQUFDWCxJQUZHO0FBR2hCRCxJQUFBQSxLQUFLLEVBQUVZLE1BQU0sQ0FBQ1osS0FIRTtBQUloQkUsSUFBQUEsU0FBUyxFQUFFLElBQUlQLElBQUosRUFKSztBQUtoQlEsSUFBQUEsVUFBVSxFQUFFO0FBTEksR0FBbEI7QUFPQU4sRUFBQUEsT0FBTyxDQUFDa0IsSUFBUixDQUFhRCxTQUFiO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JqQixJQUFoQixDQUFxQnFCLFNBQXJCO0FBQ0QsQ0FYRDtBQWFBeEIsR0FBRyxDQUFDcUIsSUFBSixDQUFTLHVCQUFULEVBQWtDLFVBQUNOLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlDLE1BQU1SLEVBQUUsR0FBR08sR0FBRyxDQUFDVyxNQUFKLENBQVdsQixFQUF0QjtBQUNBbUIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHlCQUE2QnBCLEVBQTdCO0FBQ0EsTUFBTXFCLFdBQVcsR0FBR3RCLE9BQU8sQ0FBQ3VCLFNBQVIsQ0FBa0IsVUFBQVIsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ2QsRUFBUCxLQUFjQSxFQUFsQjtBQUFBLEdBQXhCLENBQXBCO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ3NCLFdBQUQsQ0FBUCxDQUFxQmhCLFVBQXJCLEdBQWtDLElBQWxDLEVBQ0FHLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JqQixJQUFoQixDQUFxQkksT0FBTyxDQUFDc0IsV0FBRCxDQUE1QixDQURBO0FBRUQsQ0FORDtBQVFBN0IsR0FBRyxVQUFILENBQVcsY0FBWCxFQUEyQixVQUFDZSxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN2QyxNQUFNUixFQUFFLEdBQUdPLEdBQUcsQ0FBQ1csTUFBSixDQUFXbEIsRUFBdEI7QUFDQW1CLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiwyQkFBK0JwQixFQUEvQjtBQUNBLE1BQU1xQixXQUFXLEdBQUd0QixPQUFPLENBQUN1QixTQUFSLENBQWtCLFVBQUFSLE1BQU07QUFBQSxXQUFJQSxNQUFNLENBQUNkLEVBQVAsS0FBY0EsRUFBbEI7QUFBQSxHQUF4QixDQUFwQjtBQUNBLE1BQU11QixhQUFhLEdBQUd4QixPQUFPLENBQUN5QixNQUFSLENBQWVILFdBQWYsRUFBNEIsQ0FBNUIsQ0FBdEI7QUFDQWIsRUFBQUEsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQmpCLElBQWhCLENBQXFCNEIsYUFBYSxDQUFDLENBQUQsQ0FBbEM7QUFDRCxDQU5EO0FBV0YvQixHQUFHLENBQUNpQyxNQUFKLENBQVcsSUFBWCxFQUFnQjtBQUFBLFNBQUlOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaLENBQUo7QUFBQSxDQUFoQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZW5jb3JlL0FJUF9Bc3Nlc3NtZW50Mi9haXAtYmFja2VuZC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgeyB2MSBhcyB1dWlkdjEgfSBmcm9tICd1dWlkJztcblxuY29uc3QgYXBwPWV4cHJlc3MoKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG5jb25zdCB0b2RheSA9IERhdGUubm93KCk7XG5cbmxldCBmYXZvdXJzID0gW1xuICAgIHtcbiAgICAgIGlkOiB1dWlkdjEoKSxcbiAgICAgIHB1Ymxpc2hlcjonJyxcbiAgICAgIGF3YXJkOicnLFxuICAgICAgdGV4dDogJ0hlbHAgd2l0aCB0aGUgd2luZG93JyxcbiAgICAgIGNyZWF0ZWRBdDogdG9kYXksXG4gICAgICBpc0FjY2VwdGVkOiBmYWxzZVxuICAgIH1cbiAgXVxuICBcblxuXG5cbnZhciBhbGxvd0Nyb3NzRG9tYWluID0gZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICByZXMuaGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCBcIipcIik7XG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdHRVQsUFVULFBPU1QsREVMRVRFJyk7XG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUnKTtcbiAgICBuZXh0KCk7XG4gIH07XG4gIFxuICBhcHAudXNlKGFsbG93Q3Jvc3NEb21haW4pO1xuXG5cbiAgYXBwLmdldCgnL2Zhdm91cnMnLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihmYXZvdXJzKTtcbiAgfSlcblxuXG4gIGFwcC5wb3N0KCcvZmF2b3VycycsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgZmF2b3VyIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCBuZXdGYXZvdXIgPSB7XG4gICAgICBpZDogdXVpZHYxKCksXG4gICAgICB0ZXh0OiBmYXZvdXIudGV4dCxcbiAgICAgIGF3YXJkOiBmYXZvdXIuYXdhcmQsXG4gICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICBpc0FjY2VwdGVkOiBmYWxzZVxuICAgIH1cbiAgICBmYXZvdXJzLnB1c2gobmV3RmF2b3VyKVxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKG5ld0Zhdm91cik7XG4gIH0pXG5cbiAgYXBwLnBvc3QoJy9mYXZvdXJzLzppZC9hY2NlcHRlZCcsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBjb25zb2xlLmxvZyhgUE9TVCAvZmF2b3Vycy8ke2lkfS9hY2NlcHRlZGApO1xuICAgIGNvbnN0IGZhdm91ckluZGV4ID0gZmF2b3Vycy5maW5kSW5kZXgoZmF2b3VyID0+IGZhdm91ci5pZCA9PT0gaWQpXG4gICAgZmF2b3Vyc1tmYXZvdXJJbmRleF0uaXNBY2NlcHRlZCA9IHRydWUsXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oZmF2b3Vyc1tmYXZvdXJJbmRleF0pO1xuICB9KVxuXG4gIGFwcC5kZWxldGUoJy9mYXZvdXJzLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgICBjb25zb2xlLmxvZyhgREVMRVRFIC9mYXZvdXJzLyR7aWR9YCk7XG4gICAgY29uc3QgZmF2b3VySW5kZXggPSBmYXZvdXJzLmZpbmRJbmRleChmYXZvdXIgPT4gZmF2b3VyLmlkID09PSBpZClcbiAgICBjb25zdCBkZWxldGVkRmF2b3VyID0gZmF2b3Vycy5zcGxpY2UoZmF2b3VySW5kZXgsIDEpO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGRlbGV0ZWRGYXZvdXJbMF0pO1xuICB9KVxuXG5cblxuXG5hcHAubGlzdGVuKDgwMDAsKCk9PmNvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQ6ODAwMFwiKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "today",
        "Date",
        "now",
        "favours",
        "id",
        "publisher",
        "award",
        "text",
        "createdAt",
        "isAccepted",
        "allowCrossDomain",
        "req",
        "res",
        "next",
        "header",
        "get",
        "status",
        "post",
        "favour",
        "body",
        "newFavour",
        "push",
        "params",
        "console",
        "log",
        "favourIndex",
        "findIndex",
        "deletedFavour",
        "splice",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/encore/AIP_Assessment2/aip-backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport { v1 as uuidv1 } from 'uuid';\n\nconst app=express();\napp.use(bodyParser.json());\n\nconst today = Date.now();\n\nlet favours = [\n    {\n      id: uuidv1(),\n      publisher:'',\n      award:'',\n      text: 'Help with the window',\n      createdAt: today,\n      isAccepted: false\n    }\n  ]\n  \n\n\n\nvar allowCrossDomain = function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', \"*\");\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n    res.header('Access-Control-Allow-Headers', 'Content-Type');\n    next();\n  };\n  \n  app.use(allowCrossDomain);\n\n\n  app.get('/favours', (req, res) => {\n    res.status(200).json(favours);\n  })\n\n\n  app.post('/favours', (req, res) => {\n    const { favour } = req.body;\n    const newFavour = {\n      id: uuidv1(),\n      text: favour.text,\n      award: favour.award,\n      createdAt: new Date(),\n      isAccepted: false\n    }\n    favours.push(newFavour)\n    res.status(200).json(newFavour);\n  })\n\n  app.post('/favours/:id/accepted', (req, res) => {\n    const id = req.params.id;\n    console.log(`POST /favours/${id}/accepted`);\n    const favourIndex = favours.findIndex(favour => favour.id === id)\n    favours[favourIndex].isAccepted = true,\n    res.status(200).json(favours[favourIndex]);\n  })\n\n  app.delete('/favours/:id', (req, res) => {\n    const id = req.params.id;\n    console.log(`DELETE /favours/${id}`);\n    const favourIndex = favours.findIndex(favour => favour.id === id)\n    const deletedFavour = favours.splice(favourIndex, 1);\n    res.status(200).json(deletedFavour[0]);\n  })\n\n\n\n\napp.listen(8000,()=>console.log(\"Listening on port:8000\"));"
      ]
    },
    "sourceType": "script",
    "mtime": 1598588591111
  }
}